# 분할 정복 방식
# 반복되는 형태
# 3의 1승의 경우 : 아래의 그림과 동일 : 이것을 x라고 가정하면
# ***
# * *
# ***
# 3의 2승의 경우 : 아래의 그림과 동일 : 이것을 y라고 가정하면
# *********
# * ** ** *
# *********
# ***   ***        xxx
# * *   * *     == x x
# ***   ***        xxx
# *********
# * ** ** *
# *********
# 3의 3승의 경우 : 아래의 그림과 동일
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************
# ***   ******   ******   ***
# * *   * ** *   * ** *   * *
# ***   ******   ******   ***
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************
# *********         *********       xxxxxxxxx
# * ** ** *         * ** ** *       x xx xx x
# *********         *********       xxxxxxxxx
# ***   ***         ***   ***       xxxxxxxxx      yyy
# * *   * *         * *   * *    == x x   x x   == y y
# ***   ***         ***   ***       xxx   xxx      yyy
# *********         *********       xxxxxxxxx
# * ** ** *         * ** ** *       x xx xx x
# *********         *********       xxxxxxxxx
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************
# ***   ******   ******   ***
# * *   * ** *   * ** *   * *
# ***   ******   ******   ***
# ***************************
# * ** ** ** ** ** ** ** ** *
# ***************************

def stars(n):
    matrix = []
    for i in range(3 * len(n)):
        # ㅇㅇㅇ
        # ㅇㅋㅇ
        # ㅇㅇㅇ
        # 여기서 ㅋ 부분
        if i // len(n) == 1:
            matrix.append(n[i % len(n)] + " " * len(n) + n[i % len(n)])
        # ㅇ부분
        else:
            matrix.append(n[i % len(n)] * 3)
    return list(matrix)

# 패턴 담기
star = ["***", "* *", "***"]

n = int(input())
k = 0

# 승수 구하기
while n != 3:
    n = int(n / 3)
    k += 1

# 승수 만큼 반복
for i in range(k):
    star = stars(star)
    
# 출력
for i in star:
    print(i)
