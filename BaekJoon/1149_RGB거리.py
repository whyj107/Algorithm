# N = 3
# 0: 1 2 3
# 1: 3 2 1
# 2: 1 2 3

# i - 1의 집 색과 i의 집 색이 같으면 안되고 i + 1의 집 색과 i의 집 색이 같으면 안되기 때문에
# i를 기준의 식
# RGB[i][빨간색] = 최솟값(RGB[i-1][초록색], RGB[i-1][파란색]) + RGB[i][빨간색]
# RGB[i][초록색] = 최솟값(RGB[i-1][빨간색], RGB[i-1][파란색]) + RGB[i][초록색]
# RGB[i][파란색] = 최솟값(RGB[i-1][빨간색], RGB[i-1][초록색]) + RGB[i][파란색]

# 이 식들을 누적 시켜 나가면
# RGB[1][빨간색] = 최솟값(RGB[0][초록색]:2, RGB[0][파란색]:3) + RGB[1][빨간색]:3
#                = 2 + 3 = 5
# RGB[1][초록색] = 최솟값(RGB[0][빨간색]:1, RGB[0][파란색]:3) + RGB[1][초록색]:2
#                = 1 + 2 = 3
# RGB[1][파란색] = 최솟값(RGB[0][빨간색]:1, RGB[0][초록색]:2) + RGB[1][파란색]:1
#                = 1 + 1 = 2
# === 아래와 같이 변경된다.
# 0: 1 2 3
# 1: 5 3 2
# 2: 1 2 3
# RGB[2][빨간색] = 최솟값(RGB[1][초록색]:3, RGB[1][파란색]:2) + RGB[2][빨간색]:1
#                = 2 + 1 = 3
# RGB[2][초록색] = 최솟값(RGB[1][빨간색]:5, RGB[1][파란색]:2) + RGB[2][초록색]:2
#                = 2 + 2 = 4
# RGB[2][파란색] = 최솟값(RGB[1][빨간색]:5, RGB[1][초록색]:3) + RGB[2][파란색]:3
#                = 3 + 3 = 6
# ===
# 최종 값을 살펴보면
# 2: 3 4 6
# 3 = 빨간색(0번) + 파란색(1번) + 빨간색(2번)
# 4 = 빨간색(0번) + 파란색(1번) + 초록색(2번)
# 6 = 빨간색(0번) + 초록색(1번) + 파란색(2번)
# 으로 이중 가장 작은 값은 3이다.

if __name__ == '__main__':
    N = int(input())
    RGB = []

    for i in range(N):
        RGB.append(list(map(int, input().split())))

    for j in range(1, len(RGB)):
        RGB[j][0] = min(RGB[j - 1][1], RGB[j - 1][2]) + RGB[j][0]
        RGB[j][1] = min(RGB[j - 1][0], RGB[j - 1][2]) + RGB[j][1]
        RGB[j][2] = min(RGB[j - 1][0], RGB[j - 1][1]) + RGB[j][2]
    print(min(RGB[-1][0], RGB[-1][1], RGB[-1][2]))